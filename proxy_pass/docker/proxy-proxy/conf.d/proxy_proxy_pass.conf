# prevent from exiting in container
#daemon off;  # This is already passed as command line by the nginx dockerfile entrypoint.

    server {
        listen          80;

#         listen 443 ssl;
        # ssl on;

        server_name service1;

        # Logging Settings
        access_log  /var/log/nginx/proxy_proxy_pass_access.log main;
        error_log /var/log/nginx/proxy_proxy_pass_error.log warn;

        # sendfile off in dev for no keepalive_timeout 65;
        # sendfile does not play nice with docker/VMs and cache disabling.
        sendfile off;
        types_hash_max_size 2048;

#         include /etc/nginx/mime.types;
        default_type application/octet-stream;

        # SSL Settings
        ssl_protocols TLSv1 TLSv1.1 TLSv1.2; # Dropping SSLv3, ref: POODLE
        ssl_prefer_server_ciphers on;

        client_max_body_size 300M;

        # Gzip Settings
        gzip on;
        gzip_disable "msie6";

        gzip_vary on;
        gzip_proxied any;
        gzip_comp_level 6;
        gzip_buffers 16 8k;
        # minimum http version required for us to use compression
        gzip_http_version 1.1;
        gzip_types text/plain text/css application/json application/javascript text/xml application/xml application/xml+rss text/javascript;

        # First we try to serve the files directly (like static images or the js files).
        # If we cant we redirect to our app.
        # root should be out of location block


        location / {
            proxy_set_header HOST $host;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_pass http://service1.cloud.com:81/;
}


 }
